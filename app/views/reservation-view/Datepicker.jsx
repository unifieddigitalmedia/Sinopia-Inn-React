const React = require('react');class Datepicker extends React.Component {constructor(props) {		super();this.state = { fromDate : null , toDate:null };this.validiateDates = this.validiateDates.bind(this);}componentDidMount(){	 	 	const context = this;			this.props.fromDate != null || this.props.toDate != null ? setState({fromDate: this.props.fromDate , toDate :this.props.toDate}) :  "" ;		$('#fromdate')[0].type != 'date' ? $('#fromdate').datepicker({ dateFormat: "D, d M yy" }).on( "change", function() {   						$(this).parent().addClass('is-focused');			context.setState({fromDate : new Date(this.value).getDate() + "-" +(new Date(this.value).getMonth()  + 1)+ "-" + new Date(this.value).getFullYear()});					}) : "" ;	$('#todate')[0].type != 'date' ? $('#todate').datepicker({ dateFormat: "D, d M yy" }).on( "change", function() {   							 $(this).parent().addClass('is-focused');						context.setState({toDate : new Date(this.value).getDate() + "-" +(new Date(this.value).getMonth()  + 1)+ "-" + new Date(this.value).getFullYear()});					}) : "" ;}validiateDates (){				const today = new Date();		const fromDate = new Date(this.state.fromDate.split("-")[2],Number(this.state.fromDate.split("-")[1])-1,this.state.fromDate.split("-")[0]);      const toDate = new Date(this.state.toDate.split("-")[2],Number(this.state.toDate.split("-")[1])-1,this.state.toDate.split("-")[0]);	const lengthOfstay = Math.round((toDate - fromDate)/(1000*60*60*24));	     toDate < fromDate  ? alert('Please check you check out date.') :  (today > fromDate || toDate  > toDate) ?  alert('Dates cannot be in the past.' ) :  (toDate == 'Invalid Date' ||  fromDate ==   'Invalid Date') ?  alert('Please check your reservation dates.')  : this.props.checkAvailability(this.state.fromDate.split("-"),this.state.toDate.split("-"),lengthOfstay);}render() {	return    <div className="mdl-grid" >          <div className="mdl-cell mdl-cell--3-col mdl-cell--8-col-tablet  mdl-cell--4-col-phone"> 		 		  		    		   <i className="mdl-textfield__icon material-icons mdl-textfield__icon  reservation_mdl-textfield__icon">date_range</i>		  <div className="mdl-textfield mdl-js-textfield mdl-textfield--floating-label">		               <input className="mdl-textfield__input" type="text"   id="fromdate" name="from"  />                       <label className="mdl-textfield__label " htmlFor="from">CHECK IN DATE </label>                </div>       </div>        <div className="mdl-cell mdl-cell--3-col mdl-cell--8-col-tablet  mdl-cell--4-col-phone">	  	  	   <i className="mdl-textfield__icon material-icons mdl-textfield__icon reservation_mdl-textfield__icon ">date_range</i>		 			<div className="mdl-textfield mdl-js-textfield mdl-textfield--floating-label">  		             <input className="mdl-textfield__input" type="text"   id="todate" name="todate" />               <label className="mdl-textfield__label" htmlFor="todate">CHECK OUT DATE </label>                </div>      </div>        <div className="mdl-cell mdl-cell--3-col mdl-cell--8-col-tablet  mdl-cell--4-col-phone">	  		<i className="mdl-textfield__icon material-icons mdl-textfield__icon reservation_mdl-textfield__icon ">card_giftcard</i>			<div className="mdl-textfield mdl-js-textfield mdl-textfield--floating-label">        	  	        <input className="mdl-textfield__input" type="text"   id="promo" name="promo" />                  <label className="mdl-textfield__label" htmlFor="promo">PROMO</label>      </div>    </div>      <div className="mdl-cell mdl-cell--3-col mdl-cell--8-col-tablet  mdl-cell--4-col-phone">    <button className="mdl-button mdl-js-button mdl-button--raised  tripConfirm" type="button" onClick={(e) => this.validiateDates(this.props.item,e)} >CHECK AVAILABILITY</button>      </div>       </div>         }	}module.exports = Datepicker