const React = require('react');const ReactDOM = require('react-dom');class Items extends React.Component {constructor(props) {super(props);this.Items = [] ; }render(){		const context = this ;		const divStyle = {		cursor : "pointer",				}	if(this.props.position === 0 ){				return <div className="item active">				<div className="col-xs-4"><img style={divStyle} src={context.props.element.image_url} className="img-responsive"  onClick={ (e) => context.props.getRecipe(e,context.props.element._id) } /></div>			</div>								}else{									return <div className="item ">				<div className="col-xs-4"><img style={divStyle} src={context.props.element.image_url} className="img-responsive" / ></div>			</div>									}						}}class CarouselApp extends React.Component {constructor(props) {super(props);this.state = { items : null }this.getRecipe  = this.getRecipe.bind(this);}getRecipe(e,para){	console.log(para);window.sessionStorage.recipeID = para;window.location.assign("recipe.html");		}componentDidMount(){	const context = this; var items = [];this.xhttp = new XMLHttpRequest();	this.xhttp.onreadystatechange = function() {		if (this.readyState == 4 && this.status == 200) {									JSON.parse(this.responseText).forEach(function(element, index){								console.log(JSON.stringify(element));								items.push(<Items element={element} key={index} getRecipe={context.getRecipe}  position={index}/>);							});									context.setState({items:items});		}}this.xhttp.open("GET", "/api/recipe?", true);this.xhttp.setRequestHeader("Content-Type", "application/json");this.xhttp.send();	  }render() {      return <div className="carousel-inner recipes-carousel-inner" >					{this.state.items}			</div>	     }}module.exports = CarouselApp;