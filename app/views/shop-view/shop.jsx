const React = require('react');const ReactDOM = require('react-dom');import Page from './Page.jsx';class Pagination extends React.Component {			render (){								return  <a href="#" onClick={(e) => this.props.getItems(this.props.position )} data-id={this.props.position}>					{this.props.position + 1}				 </a>				}	}class ShopDepartment extends React.Component {constructor(props) {super(props);this.state = {catergory:[],page:0,pages:0,item:{},bag:[],list:[],items:[],title:""}this.getItems = this.getItems.bind(this);this.displaySingleItem = this.displaySingleItem.bind(this);this.addtobag = this.addtobag.bind(this);this.pagination  = this.pagination.bind(this);}; pagination(n) {	 this.getItems(this.state.page += n);}addtobag(para,para2){		var bag = this.state.bag;		var list =  this.state.list;			para2 === "bag" ?  bag.indexOf(para) != -1 ?  (bag.splice(bag.indexOf(para),1),  this.state.setState({bag:bag}) ) :  (bag.push(para)  , this.state.setState({bag:bag}) ) : 		list.indexOf(para) != -1 ?  (list.splice(bag.indexOf(para),1),  this.state.setState({list:list}) ) :  (list.push(para)  , this.state.setState({list:list}) );			window.localStorage.setItem("sinopiaInn-checkout-bag", JSON.stringify(this.state.bag));}displaySingleItem(para){			window.sessionStorage.sinopiaInnitem = JSON.stringify(para);	window.location.assign("/shop/cat/"+para.name);			 	}getItems(pageIndex){	    const context = this;		pageIndex > this.state.pages ? pageIndex = 0 : "";             pageIndex < 0 ? pageIndex =  this.state.pages : "";			this.setState({page:pageIndex},function(){					var items =[];							var indexPosition = 0;				for(var x = 0 ; x < this.state.pages ; x++){						var items =[];									for(var y = indexPosition ; y < indexPosition+16 ; y++){																		items.push(context.state.items[y] );												indexPosition += 1; 																								}														              x === context.state.page ?  context.setState({items:items})   :  "" ;		}   								});		}componentDidMount(){						const context = this; 	    	this.xhttp = new XMLHttpRequest();	this.xhttp.onreadystatechange = function() {		if (this.readyState == 4 && this.status == 200) {				 			context.setState({catergory: window.sessionStorage.sinopiaInncatergory.replace(/\b\w/g, function(l){ return l.toUpperCase() }) , items : JSON.parse(this.responseText)},function(){												context.setState({pages : Math.ceil( context.state.items.length / 16  ) });												});									 			 	  		}};this.xhttp.open("get", "/api/shop?catergory="+window.sessionStorage.sinopiaInncatergory+"&sub="+window.sessionStorage.sinopiaInnsubcatergory, true);this.xhttp.setRequestHeader("Content-Type", "application/json");this.xhttp.send();			 			 	  		}render() {var pagnation = [];for (var x = 0 ; x < this.state.pages ; x++ ){		pagnation.push(<Pagination position={x} key={"Pagination_"+x} getItems={this.getItems}/>);}if(this.state.items.length < 1 ){			 return <main className="demo-main mdl-layout__content">			<h3> SORRY NO ITEMS ARE AVAILABLE AT THE MOMENT </h3>					</main>		}else{		 return <main className="demo-main mdl-layout__content">			<h1> {this.state.catergory} </h1>			<section>			<div className="pagination">					<a href="#" onClick={(e) => this.pagination(-1)} >&laquo;</a>							{pagnation}					<a href="#" onClick={(e) => this.pagination(1)} >&raquo;</a>			</div>						</section>			<Page  items={this.state.items} displaySingleItem={this.displaySingleItem}/>		</main>			}     	     }}module.exports = ShopDepartment;